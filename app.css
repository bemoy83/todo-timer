/* Base layout */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, sans-serif;
  background: #fff;
  color: #111;
}

header, footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem env(safe-area-inset-right) 0.75rem env(safe-area-inset-left);
  background: #f5f5f5;
}

footer {
  padding-bottom: calc(0.75rem + env(safe-area-inset-bottom));
  border-top: 1px solid #ddd;
}

button {
  font-size: 1rem;
  padding: 0.6rem 1rem;
  border: none;
  border-radius: 0.6rem;
  background: #007aff;
  color: #fff;
  min-width: 44px;
  min-height: 44px;
}

button:active { background: #0051a8; }

/* Task cards */
.card {
  background: #fff;
  margin: 0.5rem;
  border-radius: 1rem;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  overflow: hidden;
}

.task-header {
  display: flex;
  justify-content: space-between;
  padding: 0.75rem;
  font-weight: 600;
}

.subtask {
  position: relative;
  overflow: hidden;
  touch-action: pan-y;
}

.swipe-bg {
  position: absolute;
  top: 0; bottom: 0; left: 0; right: 0;
  background: #ff3b30;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-right: 1rem;
  color: #fff;
}

.swipe-fore {
  position: relative;
  background: #fafafa;
  padding: 0.75rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: transform .18s ease;
}

/* Modals */
.modal {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.3);
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal.hidden { display: none; }

.modal-content {
  background: #fff;
  border-radius: 1rem;
  padding: 1rem;
  width: 80%;
  max-width: 400px;
}

.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

/* Dark mode */
body.dark {
  background: #111;
  color: #eee;
}

body.dark .card { background: #222; }
body.dark header, body.dark footer { background: #1c1c1e; }

/* Prevent accidental text selection while gesturing */
body.dragging, body.swiping {
  -webkit-user-select: none;
  user-select: none;
  cursor: grabbing;
}

/* Ensure rows donâ€™t shrink or grow during transforms */
.subtask, .swipe-fore {
  will-change: transform;
}

/* During drag we lift the card above the flow but keep its size with a placeholder */
.drag-proxy {
  position: absolute;
  left: 0; right: 0;
  z-index: 5;
  pointer-events: none;
  transform: translateZ(0); /* GPU */
}

.placeholder {
  visibility: hidden;
}

#taskList {
  touch-action: pan-y;
  -webkit-overflow-scrolling: touch;
}

/* Make reordering obvious */
.drag-handle {
  font-size: 1.1rem;
  line-height: 1;
  padding: 0.35rem 0.5rem;
  border-radius: 0.5rem;
  cursor: grab;
  user-select: none;
  touch-action: none;
  opacity: 0.7;
}
.drag-handle:active { cursor: grabbing; opacity: 1; }

/* The lifted clone while dragging */
.drag-proxy {
  position: absolute;
  left: 0; right: 0;
  z-index: 5;
  pointer-events: none;
  box-shadow: 0 8px 24px rgba(0,0,0,.25);
  transform: translateZ(0);
}

/* Visible placeholder where the card will land */
.placeholder {
  border: 2px dashed #007aff;
  border-radius: 1rem;
  background: repeating-linear-gradient(
	45deg,
	rgba(0,122,255,0.06) 0 10px,
	rgba(0,122,255,0.12) 10px 20px
  );
  transition: height .12s ease, margin .12s ease;
}

/* Small quality-of-life during gestures */
body.dragging, body.swiping {
  -webkit-user-select: none;
  user-select: none;
  cursor: grabbing;
}
